#include <opencv2/imgcodecs.hpp>
#include<opencv2/imgproc.hpp>
#include<opencv2/objdetect.hpp>
#include <opencv2/highgui.hpp>
#include<opencv2/opencv.hpp>
#include<iostream>
#include <fstream>
#include <sstream>
#include<string>
#include<opencv2/face.hpp>
#include<opencv2/face/facerec.hpp>
#include<opencv2/face/facemarkLBF.hpp>

using namespace cv;
using namespace std;
using namespace cv::face;


int main()
{
    cout << "start recognizing...." << endl;
    Ptr<face::FisherFaceRecognizer> model = face::FisherFaceRecognizer::create();
    model->read("C:\eigenface.yml");



    Mat testSample = imread("C:\\pic\\20210224_113757 (2).jpg", 0);

    int img_width = testSample.cols;
    int img_height = testSample.rows;







    VideoCapture video(0);
    CascadeClassifier facedetect;
    Mat img;
    facedetect.load("haarcascade_frontalface_default.xml");



    while (true)
    {
        video.read(img);
        vector<Rect> faces;
        facedetect.detectMultiScale(img, faces, 1.3, 5);

        cout << faces.size() << endl;

        for (int i = 0; i < faces.size(); i++)
        {
            rectangle(img, faces[i].tl(), faces[i].br(), Scalar(10, 50, 225), 3);
            rectangle(img, Point(0,0),Point(250,70), Scalar(10, 50, 225),FILLED);
            putText(img, to_string(faces.size())+" Face Found", Point(10, 40), FONT_HERSHEY_DUPLEX, 1, Scalar(5, 5, 25), 1);

           // rectangle(img, Point(0, 100), Point(250, 170), Scalar(50, 100, 225), FILLED);
           // putText(img,"Bupender Jogi ", Point(10, 140), FONT_HERSHEY_DUPLEX, 1, Scalar(5, 5, 25), 1);
        }

        imshow("Frame",img);
        waitKey(1);
    }
    return 0;
    
}
